[
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "42852",
            "WNS": "-18.823",
            "Total Power": "5.08e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "164857",
            "WNS": "-88.679",
            "Total Power": "1.78e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "169746",
            "WNS": "-80.795",
            "Total Power": "1.83e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "161023",
            "WNS": "-85.526",
            "Total Power": "1.95e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "151040",
            "WNS": "-79.031",
            "Total Power": "1.90e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "200418",
            "WNS": "-53.679",
            "Total Power": "2.65e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "44078",
            "WNS": "-19.033",
            "Total Power": "5.17e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "360812",
            "WNS": "-180.404",
            "Total Power": "3.87e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "186270",
            "WNS": "-112.585",
            "Total Power": "2.81e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "90455",
            "WNS": "-52.145",
            "Total Power": "1.28e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "357830",
            "WNS": "-184.349",
            "Total Power": "4.83e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "311081",
            "WNS": "-154.319",
            "Total Power": "3.22e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "67338",
            "WNS": "-32.399",
            "Total Power": "7.73e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "809298",
            "WNS": "-302.698",
            "Total Power": "7.46e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "206270",
            "WNS": "-56.745",
            "Total Power": "3.02e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "41826",
            "WNS": "-16.869",
            "Total Power": "5.41e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "541047",
            "WNS": "-283.812",
            "Total Power": "1.08e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "228627",
            "WNS": "-120.973",
            "Total Power": "2.93e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "29179",
            "WNS": "-12.268",
            "Total Power": "4.21e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "74523",
            "WNS": "-41.832",
            "Total Power": "9.36e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "85666",
            "WNS": "-49.079",
            "Total Power": "1.21e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "117720",
            "WNS": "-69.012",
            "Total Power": "1.79e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "847574",
            "WNS": "-564.323",
            "Total Power": "1.02e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "95628",
            "WNS": "-55.212",
            "Total Power": "1.36e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "583037",
            "WNS": "-289.520",
            "Total Power": "9.19e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "96680",
            "WNS": "-45.823",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "372179",
            "WNS": "-235.046",
            "Total Power": "4.21e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "220848",
            "WNS": "-121.772",
            "Total Power": "3.27e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "70023",
            "WNS": "-27.754",
            "Total Power": "7.51e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "31094",
            "WNS": "-12.499",
            "Total Power": "3.99e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "99199",
            "WNS": "-53.615",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "42901",
            "WNS": "-17.794",
            "Total Power": "5.14e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "658780",
            "WNS": "-305.971",
            "Total Power": "6.58e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "115896",
            "WNS": "-69.432",
            "Total Power": "1.40e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "174087",
            "WNS": "-104.448",
            "Total Power": "2.00e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "80055",
            "WNS": "-32.714",
            "Total Power": "8.61e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "994637",
            "WNS": "-467.798",
            "Total Power": "1.88e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "73390",
            "WNS": "-24.539",
            "Total Power": "8.87e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "95546",
            "WNS": "-50.927",
            "Total Power": "1.30e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "65771",
            "WNS": "-34.920",
            "Total Power": "9.70e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "667085",
            "WNS": "-298.081",
            "Total Power": "7.55e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "126329",
            "WNS": "-53.952",
            "Total Power": "1.17e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "91044",
            "WNS": "-42.756",
            "Total Power": "9.84e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "29089",
            "WNS": "-12.268",
            "Total Power": "4.22e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "1132228",
            "WNS": "-511.444",
            "Total Power": "2.03e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "130599",
            "WNS": "-77.046",
            "Total Power": "1.49e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "157689",
            "WNS": "-93.158",
            "Total Power": "2.52e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "140484",
            "WNS": "-68.424",
            "Total Power": "1.47e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "197051",
            "WNS": "-107.255",
            "Total Power": "2.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "345494",
            "WNS": "-164.284",
            "Total Power": "4.09e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "130973",
            "WNS": "-67.814",
            "Total Power": "1.66e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "138033",
            "WNS": "-72.288",
            "Total Power": "1.59e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "85662",
            "WNS": "-32.210",
            "Total Power": "1.10e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "135895",
            "WNS": "-69.978",
            "Total Power": "1.46e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "331254",
            "WNS": "-155.832",
            "Total Power": "3.18e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "78850",
            "WNS": "-44.899",
            "Total Power": "9.39e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "80309",
            "WNS": "-29.141",
            "Total Power": "9.59e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "155243",
            "WNS": "-93.557",
            "Total Power": "2.35e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "754427",
            "WNS": "-475.688",
            "Total Power": "8.44e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "1641499",
            "WNS": "-777.518",
            "Total Power": "8.10e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "67858",
            "WNS": "-32.399",
            "Total Power": "7.96e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "77796",
            "WNS": "-37.799",
            "Total Power": "8.82e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "604950",
            "WNS": "-303.117",
            "Total Power": "1.10e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "682190",
            "WNS": "-320.912",
            "Total Power": "8.52e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "82693",
            "WNS": "-46.390",
            "Total Power": "9.74e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "202957",
            "WNS": "-122.782",
            "Total Power": "3.23e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "29126",
            "WNS": "-12.268",
            "Total Power": "4.22e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "1159534",
            "WNS": "-511.444",
            "Total Power": "1.66e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "33846",
            "WNS": "-15.335",
            "Total Power": "4.99e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "186282",
            "WNS": "-111.891",
            "Total Power": "2.15e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "850854",
            "WNS": "-535.785",
            "Total Power": "9.30e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "137277",
            "WNS": "-71.658",
            "Total Power": "1.44e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "53487",
            "WNS": "-20.084",
            "Total Power": "6.06e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "45491",
            "WNS": "-19.244",
            "Total Power": "5.48e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "40947",
            "WNS": "-19.937",
            "Total Power": "6.01e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "106955",
            "WNS": "-49.646",
            "Total Power": "1.10e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "118146",
            "WNS": "-49.478",
            "Total Power": "1.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "189496",
            "WNS": "-78.338",
            "Total Power": "1.69e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "565107",
            "WNS": "-286.666",
            "Total Power": "9.37e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "82915",
            "WNS": "-30.675",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "110923",
            "WNS": "-42.200",
            "Total Power": "1.27e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "31207",
            "WNS": "-12.499",
            "Total Power": "3.98e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "136969",
            "WNS": "-81.016",
            "Total Power": "1.97e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "46585",
            "WNS": "-22.785",
            "Total Power": "6.83e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "86314",
            "WNS": "-48.879",
            "Total Power": "1.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "75525",
            "WNS": "-32.210",
            "Total Power": "9.75e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "155243",
            "WNS": "-93.557",
            "Total Power": "2.35e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "155418",
            "WNS": "-93.158",
            "Total Power": "2.27e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "119695",
            "WNS": "-45.665",
            "Total Power": "1.04e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "160531",
            "WNS": "-73.738",
            "Total Power": "1.85e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "575863",
            "WNS": "-293.465",
            "Total Power": "9.95e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "63374",
            "WNS": "-31.558",
            "Total Power": "7.80e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "148751",
            "WNS": "-80.385",
            "Total Power": "2.00e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "258300",
            "WNS": "-120.553",
            "Total Power": "2.72e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "106920",
            "WNS": "-42.336",
            "Total Power": "1.02e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "60780",
            "WNS": "-32.630",
            "Total Power": "7.71e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "130091",
            "WNS": "-66.911",
            "Total Power": "1.41e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "105313",
            "WNS": "-53.542",
            "Total Power": "1.13e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "106144",
            "WNS": "-55.485",
            "Total Power": "1.40e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "1544871",
            "WNS": "-755.359",
            "Total Power": "7.39e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "31224",
            "WNS": "-12.499",
            "Total Power": "3.98e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "249443",
            "WNS": "-115.171",
            "Total Power": "2.68e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "130896",
            "WNS": "-54.330",
            "Total Power": "1.65e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "104406",
            "WNS": "-44.479",
            "Total Power": "1.43e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "60059",
            "WNS": "-21.954",
            "Total Power": "6.39e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "118551",
            "WNS": "-49.478",
            "Total Power": "1.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "180373",
            "WNS": "-91.329",
            "Total Power": "1.96e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "65512",
            "WNS": "-26.073",
            "Total Power": "8.00e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "417366",
            "WNS": "-188.966",
            "Total Power": "4.28e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "88207",
            "WNS": "-50.612",
            "Total Power": "1.26e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "117822",
            "WNS": "-40.782",
            "Total Power": "1.08e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "33852",
            "WNS": "-15.335",
            "Total Power": "4.95e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "104043",
            "WNS": "-36.717",
            "Total Power": "1.02e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "140849",
            "WNS": "-68.655",
            "Total Power": "1.53e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "88388",
            "WNS": "-50.612",
            "Total Power": "1.26e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "433318",
            "WNS": "-307.482",
            "Total Power": "5.60e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "46738",
            "WNS": "-22.785",
            "Total Power": "6.72e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "229988",
            "WNS": "-110.882",
            "Total Power": "2.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "63751",
            "WNS": "-27.135",
            "Total Power": "6.58e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "73256",
            "WNS": "-33.628",
            "Total Power": "7.98e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "94225",
            "WNS": "-45.256",
            "Total Power": "9.97e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "221870",
            "WNS": "-121.772",
            "Total Power": "3.25e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "88594",
            "WNS": "-51.767",
            "Total Power": "1.10e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "117547",
            "WNS": "-55.506",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "67998",
            "WNS": "-27.607",
            "Total Power": "8.24e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "2210971",
            "WNS": "-935.484",
            "Total Power": "2.85e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "187744",
            "WNS": "-112.585",
            "Total Power": "2.98e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "116797",
            "WNS": "-69.012",
            "Total Power": "1.71e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "186270",
            "WNS": "-112.585",
            "Total Power": "2.81e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "41826",
            "WNS": "-16.869",
            "Total Power": "5.41e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "205519",
            "WNS": "-56.745",
            "Total Power": "2.97e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "112083",
            "WNS": "-54.424",
            "Total Power": "1.18e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "270335",
            "WNS": "-131.318",
            "Total Power": "2.74e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "37084",
            "WNS": "-13.801",
            "Total Power": "4.83e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "75590",
            "WNS": "-32.210",
            "Total Power": "9.75e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "67977",
            "WNS": "-27.607",
            "Total Power": "8.31e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "117720",
            "WNS": "-69.012",
            "Total Power": "1.79e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "58718",
            "WNS": "-28.868",
            "Total Power": "7.42e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "111644",
            "WNS": "-54.424",
            "Total Power": "1.15e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "97973",
            "WNS": "-56.745",
            "Total Power": "1.43e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "200781",
            "WNS": "-53.679",
            "Total Power": "2.69e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "91073",
            "WNS": "-44.815",
            "Total Power": "1.00e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "49844",
            "WNS": "-16.049",
            "Total Power": "5.34e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "80368",
            "WNS": "-29.141",
            "Total Power": "9.68e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "117016",
            "WNS": "-69.012",
            "Total Power": "1.71e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "139302",
            "WNS": "-85.021",
            "Total Power": "1.61e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "278763",
            "WNS": "-150.534",
            "Total Power": "3.02e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "275099",
            "WNS": "-150.534",
            "Total Power": "3.47e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "375893",
            "WNS": "-201.472",
            "Total Power": "3.87e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "566435",
            "WNS": "-366.740",
            "Total Power": "6.47e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "137314",
            "WNS": "-65.735",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "63331",
            "WNS": "-24.539",
            "Total Power": "7.55e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "134925",
            "WNS": "-67.667",
            "Total Power": "1.44e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "906357",
            "WNS": "-602.598",
            "Total Power": "1.08e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "460415",
            "WNS": "-128.374",
            "Total Power": "3.95e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "247422",
            "WNS": "-151.438",
            "Total Power": "3.93e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "41843",
            "WNS": "-16.869",
            "Total Power": "5.51e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "90836",
            "WNS": "-53.216",
            "Total Power": "1.13e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "247488",
            "WNS": "-127.113",
            "Total Power": "2.52e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "29030",
            "WNS": "-12.268",
            "Total Power": "4.27e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "155884",
            "WNS": "-77.623",
            "Total Power": "1.62e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "147497",
            "WNS": "-88.301",
            "Total Power": "2.14e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "514720",
            "WNS": "-264.843",
            "Total Power": "1.02e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "973643",
            "WNS": "-471.995",
            "Total Power": "8.95e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "295921",
            "WNS": "-152.805",
            "Total Power": "3.03e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "95519",
            "WNS": "-49.793",
            "Total Power": "1.35e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "90395",
            "WNS": "-52.145",
            "Total Power": "1.29e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "34117",
            "WNS": "-14.159",
            "Total Power": "4.24e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "178275",
            "WNS": "-79.892",
            "Total Power": "1.76e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "1948938",
            "WNS": "-902.246",
            "Total Power": "3.23e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "156997",
            "WNS": "-77.623",
            "Total Power": "1.62e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "174149",
            "WNS": "-64.895",
            "Total Power": "2.09e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "85902",
            "WNS": "-49.079",
            "Total Power": "1.21e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "1768691",
            "WNS": "-767.110",
            "Total Power": "4.66e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "696942",
            "WNS": "-288.764",
            "Total Power": "9.07e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "117733",
            "WNS": "-69.012",
            "Total Power": "1.79e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "169058",
            "WNS": "-61.492",
            "Total Power": "1.97e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "156261",
            "WNS": "-75.313",
            "Total Power": "1.56e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "122765",
            "WNS": "-63.466",
            "Total Power": "1.53e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "370994",
            "WNS": "-115.843",
            "Total Power": "3.09e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "160483",
            "WNS": "-73.738",
            "Total Power": "1.85e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "41080",
            "WNS": "-18.403",
            "Total Power": "5.17e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "60859",
            "WNS": "-26.693",
            "Total Power": "6.52e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "268351",
            "WNS": "-129.383",
            "Total Power": "2.64e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "65521",
            "WNS": "-26.073",
            "Total Power": "8.04e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "2512498",
            "WNS": "-843.995",
            "Total Power": "3.52e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "117071",
            "WNS": "-69.012",
            "Total Power": "1.70e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "150189",
            "WNS": "-76.867",
            "Total Power": "1.60e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "1768779",
            "WNS": "-777.518",
            "Total Power": "1.99e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "33896",
            "WNS": "-13.129",
            "Total Power": "4.05e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "115896",
            "WNS": "-69.432",
            "Total Power": "1.40e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "164381",
            "WNS": "-85.967",
            "Total Power": "1.90e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "50715",
            "WNS": "-25.212",
            "Total Power": "7.29e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "101623",
            "WNS": "-49.184",
            "Total Power": "1.40e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "206270",
            "WNS": "-56.745",
            "Total Power": "3.02e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "46459",
            "WNS": "-20.483",
            "Total Power": "5.40e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "164547",
            "WNS": "-85.967",
            "Total Power": "1.90e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "40998",
            "WNS": "-19.937",
            "Total Power": "6.00e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "67998",
            "WNS": "-27.607",
            "Total Power": "8.24e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "143561",
            "WNS": "-88.007",
            "Total Power": "1.83e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "680984",
            "WNS": "-353.227",
            "Total Power": "1.11e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "94239",
            "WNS": "-44.479",
            "Total Power": "1.15e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "120001",
            "WNS": "-48.848",
            "Total Power": "1.24e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "57085",
            "WNS": "-24.455",
            "Total Power": "6.21e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "408221",
            "WNS": "-258.296",
            "Total Power": "4.62e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "641925",
            "WNS": "-293.885",
            "Total Power": "8.39e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "43484",
            "WNS": "-19.853",
            "Total Power": "5.43e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "90030",
            "WNS": "-44.311",
            "Total Power": "1.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "238442",
            "WNS": "-105.752",
            "Total Power": "2.85e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "34697",
            "WNS": "-12.268",
            "Total Power": "4.51e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "63163",
            "WNS": "-24.539",
            "Total Power": "7.57e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "166547",
            "WNS": "-101.799",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "68034",
            "WNS": "-27.607",
            "Total Power": "8.34e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "136444",
            "WNS": "-81.016",
            "Total Power": "1.95e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "97849",
            "WNS": "-56.745",
            "Total Power": "1.40e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "72722",
            "WNS": "-30.675",
            "Total Power": "9.08e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "108386",
            "WNS": "-64.811",
            "Total Power": "1.35e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "93231",
            "WNS": "-53.679",
            "Total Power": "1.32e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "197681",
            "WNS": "-119.376",
            "Total Power": "3.14e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "36187",
            "WNS": "-16.869",
            "Total Power": "5.33e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "97675",
            "WNS": "-56.745",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "150593",
            "WNS": "-79.031",
            "Total Power": "1.87e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "70456",
            "WNS": "-29.141",
            "Total Power": "8.73e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "62000",
            "WNS": "-32.493",
            "Total Power": "9.25e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "50806",
            "WNS": "-24.413",
            "Total Power": "6.91e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "65771",
            "WNS": "-34.920",
            "Total Power": "9.70e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "96953",
            "WNS": "-47.272",
            "Total Power": "1.03e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "50331",
            "WNS": "-24.203",
            "Total Power": "6.90e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "257748",
            "WNS": "-143.302",
            "Total Power": "2.93e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "2768375",
            "WNS": "-1201.558",
            "Total Power": "4.89e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "772265",
            "WNS": "-486.599",
            "Total Power": "8.59e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "65567",
            "WNS": "-26.073",
            "Total Power": "8.01e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "85058",
            "WNS": "-42.137",
            "Total Power": "9.83e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "861345",
            "WNS": "-354.150",
            "Total Power": "9.50e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "108390",
            "WNS": "-64.811",
            "Total Power": "1.35e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "97035",
            "WNS": "-52.166",
            "Total Power": "1.38e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "232232",
            "WNS": "-114.834",
            "Total Power": "2.44e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "58412",
            "WNS": "-25.464",
            "Total Power": "6.73e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "112629",
            "WNS": "-47.020",
            "Total Power": "1.06e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "39436",
            "WNS": "-15.335",
            "Total Power": "5.05e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "123040",
            "WNS": "-66.974",
            "Total Power": "1.60e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "262880",
            "WNS": "-93.557",
            "Total Power": "4.66e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "548444",
            "WNS": "-251.581",
            "Total Power": "5.07e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "203049",
            "WNS": "-122.782",
            "Total Power": "3.25e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "130393",
            "WNS": "-67.814",
            "Total Power": "1.54e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "45528",
            "WNS": "-19.244",
            "Total Power": "5.45e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "68331",
            "WNS": "-38.041",
            "Total Power": "8.21e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "98742",
            "WNS": "-56.745",
            "Total Power": "1.50e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "70655",
            "WNS": "-30.339",
            "Total Power": "7.91e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "66123",
            "WNS": "-34.920",
            "Total Power": "9.91e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "327760",
            "WNS": "-155.832",
            "Total Power": "3.17e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "1430506",
            "WNS": "-506.912",
            "Total Power": "1.85e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "1572297",
            "WNS": "-766.439",
            "Total Power": "8.50e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "97832",
            "WNS": "-49.068",
            "Total Power": "1.06e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "151980",
            "WNS": "-90.729",
            "Total Power": "2.20e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "95100",
            "WNS": "-48.627",
            "Total Power": "1.06e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "92929",
            "WNS": "-51.284",
            "Total Power": "1.48e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "137466",
            "WNS": "-80.984",
            "Total Power": "1.55e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "79878",
            "WNS": "-44.605",
            "Total Power": "1.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "54660",
            "WNS": "-29.089",
            "Total Power": "6.70e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "195640",
            "WNS": "-50.612",
            "Total Power": "2.66e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "269489",
            "WNS": "-124.758",
            "Total Power": "2.66e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "126972",
            "WNS": "-75.649",
            "Total Power": "1.58e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "152114",
            "WNS": "-90.729",
            "Total Power": "2.22e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "301243",
            "WNS": "-151.754",
            "Total Power": "4.17e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "80234",
            "WNS": "-36.307",
            "Total Power": "8.79e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "64999",
            "WNS": "-31.978",
            "Total Power": "7.82e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "44230",
            "WNS": "-18.403",
            "Total Power": "5.85e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "1817746",
            "WNS": "-464.273",
            "Total Power": "2.38e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "102295",
            "WNS": "-48.890",
            "Total Power": "1.11e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "114744",
            "WNS": "-44.626",
            "Total Power": "1.34e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "547950",
            "WNS": "-355.829",
            "Total Power": "6.32e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "184547",
            "WNS": "-91.329",
            "Total Power": "1.90e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "317958",
            "WNS": "-116.937",
            "Total Power": "2.78e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "63282",
            "WNS": "-24.539",
            "Total Power": "7.59e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "225296",
            "WNS": "-69.012",
            "Total Power": "3.70e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "102921",
            "WNS": "-55.275",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "111750",
            "WNS": "-65.063",
            "Total Power": "1.32e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "98839",
            "WNS": "-56.745",
            "Total Power": "1.51e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "96828",
            "WNS": "-47.272",
            "Total Power": "1.04e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "144654",
            "WNS": "-78.148",
            "Total Power": "1.95e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "176608",
            "WNS": "-113.236",
            "Total Power": "2.17e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "131045",
            "WNS": "-56.189",
            "Total Power": "1.23e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "2504350",
            "WNS": "-1168.320",
            "Total Power": "4.80e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "188569",
            "WNS": "-70.272",
            "Total Power": "1.58e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "90710",
            "WNS": "-52.145",
            "Total Power": "1.28e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "31496",
            "WNS": "-13.801",
            "Total Power": "4.60e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "41515",
            "WNS": "-17.583",
            "Total Power": "4.92e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "106058",
            "WNS": "-55.485",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "54462",
            "WNS": "-26.073",
            "Total Power": "7.08e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "65567",
            "WNS": "-26.073",
            "Total Power": "8.01e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "971700",
            "WNS": "-451.514",
            "Total Power": "1.41e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "134366",
            "WNS": "-71.217",
            "Total Power": "1.43e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "94328",
            "WNS": "-50.717",
            "Total Power": "1.33e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "58364",
            "WNS": "-32.430",
            "Total Power": "7.22e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "192411",
            "WNS": "-115.970",
            "Total Power": "3.03e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "108152",
            "WNS": "-38.955",
            "Total Power": "1.06e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "175691",
            "WNS": "-79.892",
            "Total Power": "1.68e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "187599",
            "WNS": "-112.585",
            "Total Power": "2.98e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "161061",
            "WNS": "-90.067",
            "Total Power": "2.51e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "36246",
            "WNS": "-16.869",
            "Total Power": "5.28e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "31303",
            "WNS": "-14.075",
            "Total Power": "4.20e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "195991",
            "WNS": "-50.612",
            "Total Power": "2.74e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "104406",
            "WNS": "-44.479",
            "Total Power": "1.43e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "57945",
            "WNS": "-28.658",
            "Total Power": "7.54e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "66269",
            "WNS": "-32.189",
            "Total Power": "7.78e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "80939",
            "WNS": "-28.900",
            "Total Power": "7.48e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "798594",
            "WNS": "-317.386",
            "Total Power": "7.92e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "75445",
            "WNS": "-32.210",
            "Total Power": "9.70e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "510899",
            "WNS": "-268.788",
            "Total Power": "1.13e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "126054",
            "WNS": "-51.904",
            "Total Power": "1.53e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "71178",
            "WNS": "-32.819",
            "Total Power": "7.96e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "1513627",
            "WNS": "-442.114",
            "Total Power": "2.16e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "71707",
            "WNS": "-40.278",
            "Total Power": "8.64e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "46650",
            "WNS": "-19.937",
            "Total Power": "6.25e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "1815001",
            "WNS": "-577.921",
            "Total Power": "2.43e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "95128",
            "WNS": "-48.627",
            "Total Power": "1.06e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "130361",
            "WNS": "-66.911",
            "Total Power": "1.41e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "72774",
            "WNS": "-30.675",
            "Total Power": "9.10e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "130263",
            "WNS": "-54.330",
            "Total Power": "1.61e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "88893",
            "WNS": "-40.068",
            "Total Power": "9.27e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "375600",
            "WNS": "-233.116",
            "Total Power": "4.20e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "144018",
            "WNS": "-85.873",
            "Total Power": "2.07e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "102612",
            "WNS": "-51.767",
            "Total Power": "1.33e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "214414",
            "WNS": "-109.462",
            "Total Power": "2.15e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "153098",
            "WNS": "-84.201",
            "Total Power": "2.07e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "92954",
            "WNS": "-53.679",
            "Total Power": "1.32e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "90455",
            "WNS": "-52.145",
            "Total Power": "1.28e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "73471",
            "WNS": "-40.908",
            "Total Power": "8.68e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "75444",
            "WNS": "-32.210",
            "Total Power": "9.81e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "126572",
            "WNS": "-64.223",
            "Total Power": "1.49e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "172499",
            "WNS": "-90.004",
            "Total Power": "1.85e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "140489",
            "WNS": "-70.734",
            "Total Power": "1.49e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "160724",
            "WNS": "-106.845",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "121511",
            "WNS": "-66.764",
            "Total Power": "1.71e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "223966",
            "WNS": "-122.529",
            "Total Power": "3.20e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "161656",
            "WNS": "-54.939",
            "Total Power": "1.54e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "131118",
            "WNS": "-56.189",
            "Total Power": "1.24e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "68641",
            "WNS": "-29.593",
            "Total Power": "7.49e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "82685",
            "WNS": "-30.675",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "94258",
            "WNS": "-44.479",
            "Total Power": "1.15e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "53376",
            "WNS": "-25.863",
            "Total Power": "7.29e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "112159",
            "WNS": "-67.121",
            "Total Power": "1.31e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "275667",
            "WNS": "-149.777",
            "Total Power": "2.97e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "108380",
            "WNS": "-62.773",
            "Total Power": "1.35e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "47379",
            "WNS": "-14.600",
            "Total Power": "5.27e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "171336",
            "WNS": "-106.256",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "1017191",
            "WNS": "-397.796",
            "Total Power": "1.66e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "139886",
            "WNS": "-83.444",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "141333",
            "WNS": "-68.655",
            "Total Power": "1.66e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "1370108",
            "WNS": "-636.172",
            "Total Power": "2.39e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "122345",
            "WNS": "-49.478",
            "Total Power": "1.45e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "180452",
            "WNS": "-85.494",
            "Total Power": "1.78e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "262620",
            "WNS": "-93.557",
            "Total Power": "4.65e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "1520629",
            "WNS": "-755.359",
            "Total Power": "9.00e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "82312",
            "WNS": "-44.479",
            "Total Power": "1.30e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "82650",
            "WNS": "-43.260",
            "Total Power": "1.09e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "1506297",
            "WNS": "-739.076",
            "Total Power": "7.03e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "2714916",
            "WNS": "-979.802",
            "Total Power": "4.49e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "75528",
            "WNS": "-33.239",
            "Total Power": "8.01e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "85614",
            "WNS": "-49.079",
            "Total Power": "1.21e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "143230",
            "WNS": "-45.361",
            "Total Power": "1.32e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 64x64 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {},
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 64                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 64                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "1325834",
            "WNS": "-533.603",
            "Total Power": "2.17e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "122385",
            "WNS": "-49.478",
            "Total Power": "1.45e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "75614",
            "WNS": "-33.239",
            "Total Power": "8.05e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "151284",
            "WNS": "-90.729",
            "Total Power": "2.20e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "98071",
            "WNS": "-52.376",
            "Total Power": "1.33e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "98671",
            "WNS": "-51.347",
            "Total Power": "1.27e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "109754",
            "WNS": "-53.637",
            "Total Power": "1.39e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "1326624",
            "WNS": "-371.441",
            "Total Power": "1.36e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "176153",
            "WNS": "-90.446",
            "Total Power": "1.81e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "277322",
            "WNS": "-145.509",
            "Total Power": "2.72e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "499289",
            "WNS": "-178.558",
            "Total Power": "3.92e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "65260",
            "WNS": "-27.334",
            "Total Power": "7.10e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "78153",
            "WNS": "-32.210",
            "Total Power": "8.23e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "99122",
            "WNS": "-53.615",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "51100",
            "WNS": "-27.124",
            "Total Power": "6.53e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "90690",
            "WNS": "-48.953",
            "Total Power": "1.31e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "68526",
            "WNS": "-31.369",
            "Total Power": "7.72e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "227442",
            "WNS": "-124.842",
            "Total Power": "3.38e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "244283",
            "WNS": "-121.646",
            "Total Power": "2.72e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "200543",
            "WNS": "-53.679",
            "Total Power": "2.67e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "97366",
            "WNS": "-50.423",
            "Total Power": "1.11e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "106611",
            "WNS": "-47.335",
            "Total Power": "1.15e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "32637",
            "WNS": "-12.919",
            "Total Power": "4.06e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "91376",
            "WNS": "-42.756",
            "Total Power": "9.93e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "62845",
            "WNS": "-25.884",
            "Total Power": "6.95e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "88336",
            "WNS": "-50.612",
            "Total Power": "1.25e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "107617",
            "WNS": "-55.695",
            "Total Power": "1.33e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "198026",
            "WNS": "-52.145",
            "Total Power": "2.74e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "29107",
            "WNS": "-12.268",
            "Total Power": "4.23e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "139886",
            "WNS": "-83.444",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "107200",
            "WNS": "-52.187",
            "Total Power": "1.37e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "764495",
            "WNS": "-268.704",
            "Total Power": "6.79e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "124719",
            "WNS": "-67.184",
            "Total Power": "1.67e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "129093",
            "WNS": "-50.360",
            "Total Power": "1.16e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "470950",
            "WNS": "-240.166",
            "Total Power": "4.73e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "119574",
            "WNS": "-55.306",
            "Total Power": "1.17e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "94494",
            "WNS": "-45.256",
            "Total Power": "1.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "90800",
            "WNS": "-48.953",
            "Total Power": "1.32e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "237098",
            "WNS": "-111.229",
            "Total Power": "2.20e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "88751",
            "WNS": "-44.374",
            "Total Power": "1.03e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "155067",
            "WNS": "-93.557",
            "Total Power": "2.36e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "109971",
            "WNS": "-53.637",
            "Total Power": "1.39e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "35062",
            "WNS": "-13.339",
            "Total Power": "4.14e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "91072",
            "WNS": "-51.746",
            "Total Power": "1.17e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "85709",
            "WNS": "-49.079",
            "Total Power": "1.21e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "70888",
            "WNS": "-33.187",
            "Total Power": "7.76e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "369735",
            "WNS": "-200.717",
            "Total Power": "4.02e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "1485051",
            "WNS": "-739.076",
            "Total Power": "8.57e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "106577",
            "WNS": "-47.335",
            "Total Power": "1.15e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "36354",
            "WNS": "-14.579",
            "Total Power": "4.38e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "181785",
            "WNS": "-81.678",
            "Total Power": "1.77e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "100594",
            "WNS": "-50.444",
            "Total Power": "1.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "1876458",
            "WNS": "-577.921",
            "Total Power": "2.06e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "104530",
            "WNS": "-55.485",
            "Total Power": "1.44e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "231157",
            "WNS": "-113.657",
            "Total Power": "2.79e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "44617",
            "WNS": "-22.375",
            "Total Power": "5.68e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "798322",
            "WNS": "-317.386",
            "Total Power": "7.94e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "2580883",
            "WNS": "-817.303",
            "Total Power": "3.93e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "87575",
            "WNS": "-42.000",
            "Total Power": "9.57e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "218173",
            "WNS": "-117.147",
            "Total Power": "2.89e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "72774",
            "WNS": "-30.675",
            "Total Power": "9.10e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "41003",
            "WNS": "-19.937",
            "Total Power": "5.96e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "172553",
            "WNS": "-86.850",
            "Total Power": "1.87e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "67590",
            "WNS": "-26.304",
            "Total Power": "7.06e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "384090",
            "WNS": "-145.614",
            "Total Power": "4.00e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "62775",
            "WNS": "-30.066",
            "Total Power": "7.16e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "838463",
            "WNS": "-316.295",
            "Total Power": "6.64e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "107714",
            "WNS": "-55.695",
            "Total Power": "1.35e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "160908",
            "WNS": "-88.679",
            "Total Power": "2.15e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "187910",
            "WNS": "-113.405",
            "Total Power": "2.15e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "206333",
            "WNS": "-112.942",
            "Total Power": "3.07e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "155024",
            "WNS": "-93.557",
            "Total Power": "2.37e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "34664",
            "WNS": "-12.268",
            "Total Power": "4.40e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "122728",
            "WNS": "-73.832",
            "Total Power": "1.44e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "55726",
            "WNS": "-21.534",
            "Total Power": "6.14e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "44101",
            "WNS": "-19.033",
            "Total Power": "5.21e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "694765",
            "WNS": "-311.679",
            "Total Power": "8.46e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "72646",
            "WNS": "-30.675",
            "Total Power": "9.11e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "295280",
            "WNS": "-181.244",
            "Total Power": "3.28e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "135308",
            "WNS": "-68.234",
            "Total Power": "1.53e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "206445",
            "WNS": "-56.745",
            "Total Power": "3.02e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "85717",
            "WNS": "-49.079",
            "Total Power": "1.22e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "84199",
            "WNS": "-48.869",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "198418",
            "WNS": "-109.116",
            "Total Power": "2.93e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "236446",
            "WNS": "-111.229",
            "Total Power": "2.22e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "102640",
            "WNS": "-55.275",
            "Total Power": "1.41e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "78770",
            "WNS": "-45.865",
            "Total Power": "9.81e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "643335",
            "WNS": "-212.887",
            "Total Power": "5.13e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "135334",
            "WNS": "-67.667",
            "Total Power": "1.43e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "95686",
            "WNS": "-50.927",
            "Total Power": "1.30e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "51096",
            "WNS": "-21.114",
            "Total Power": "5.90e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "30994",
            "WNS": "-12.499",
            "Total Power": "3.95e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "1891683",
            "WNS": "-513.123",
            "Total Power": "1.94e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "219213",
            "WNS": "-133.000",
            "Total Power": "3.60e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "102539",
            "WNS": "-54.855",
            "Total Power": "1.30e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "112707",
            "WNS": "-52.712",
            "Total Power": "1.21e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "112294",
            "WNS": "-54.424",
            "Total Power": "1.18e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "117005",
            "WNS": "-69.012",
            "Total Power": "1.72e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "165872",
            "WNS": "-99.360",
            "Total Power": "1.90e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "94326",
            "WNS": "-44.479",
            "Total Power": "1.16e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "169304",
            "WNS": "-68.760",
            "Total Power": "1.52e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "175523",
            "WNS": "-79.892",
            "Total Power": "1.69e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "38788",
            "WNS": "-18.403",
            "Total Power": "5.70e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "202926",
            "WNS": "-55.212",
            "Total Power": "3.00e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "77796",
            "WNS": "-37.799",
            "Total Power": "8.88e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "149729",
            "WNS": "-81.962",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "72919",
            "WNS": "-30.675",
            "Total Power": "9.12e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "48601",
            "WNS": "-26.063",
            "Total Power": "6.19e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "47193",
            "WNS": "-24.014",
            "Total Power": "6.09e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "393176",
            "WNS": "-175.368",
            "Total Power": "3.73e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "1012286",
            "WNS": "-639.697",
            "Total Power": "1.09e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "216792",
            "WNS": "-131.065",
            "Total Power": "2.43e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "219186",
            "WNS": "-108.022",
            "Total Power": "2.36e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "92577",
            "WNS": "-49.373",
            "Total Power": "1.31e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "496883",
            "WNS": "-143.428",
            "Total Power": "4.71e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "98982",
            "WNS": "-50.213",
            "Total Power": "1.33e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "1524865",
            "WNS": "-701.641",
            "Total Power": "6.19e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "196897",
            "WNS": "-73.717",
            "Total Power": "1.71e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "206684",
            "WNS": "-108.579",
            "Total Power": "2.14e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "65618",
            "WNS": "-34.920",
            "Total Power": "9.81e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "572239",
            "WNS": "-297.410",
            "Total Power": "1.08e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "98716",
            "WNS": "-56.745",
            "Total Power": "1.50e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "37870",
            "WNS": "-15.923",
            "Total Power": "4.57e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "40998",
            "WNS": "-19.937",
            "Total Power": "6.00e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "281057",
            "WNS": "-130.897",
            "Total Power": "2.74e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "41015",
            "WNS": "-19.937",
            "Total Power": "5.96e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "95194",
            "WNS": "-55.212",
            "Total Power": "1.36e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "145108",
            "WNS": "-75.355",
            "Total Power": "1.55e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "1901957",
            "WNS": "-513.123",
            "Total Power": "1.50e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "862770",
            "WNS": "-546.865",
            "Total Power": "9.49e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "460142",
            "WNS": "-128.374",
            "Total Power": "3.97e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "75798",
            "WNS": "-30.760",
            "Total Power": "7.85e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "797480",
            "WNS": "-364.558",
            "Total Power": "1.05e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "161870",
            "WNS": "-78.380",
            "Total Power": "1.60e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "54429",
            "WNS": "-27.639",
            "Total Power": "7.91e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "62038",
            "WNS": "-32.493",
            "Total Power": "9.16e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "351634",
            "WNS": "-157.346",
            "Total Power": "3.37e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "117773",
            "WNS": "-69.306",
            "Total Power": "1.40e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "104563",
            "WNS": "-55.275",
            "Total Power": "1.32e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "72885",
            "WNS": "-34.731",
            "Total Power": "8.31e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "75115",
            "WNS": "-32.210",
            "Total Power": "9.56e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "451086",
            "WNS": "-318.394",
            "Total Power": "5.78e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "822113",
            "WNS": "-337.866",
            "Total Power": "1.21e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "262122",
            "WNS": "-160.248",
            "Total Power": "4.51e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "60780",
            "WNS": "-32.630",
            "Total Power": "7.71e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "397981",
            "WNS": "-262.996",
            "Total Power": "4.77e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "172071",
            "WNS": "-90.446",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "155907",
            "WNS": "-93.158",
            "Total Power": "2.28e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "629557",
            "WNS": "-206.088",
            "Total Power": "5.05e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "85711",
            "WNS": "-49.079",
            "Total Power": "1.22e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "230428",
            "WNS": "-118.661",
            "Total Power": "2.70e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "110923",
            "WNS": "-42.200",
            "Total Power": "1.27e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "213252",
            "WNS": "-131.990",
            "Total Power": "2.51e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "74699",
            "WNS": "-35.425",
            "Total Power": "8.17e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "33877",
            "WNS": "-15.335",
            "Total Power": "4.91e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "54320",
            "WNS": "-27.639",
            "Total Power": "7.98e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "56981",
            "WNS": "-24.455",
            "Total Power": "6.15e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "142969",
            "WNS": "-75.355",
            "Total Power": "1.70e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "1436774",
            "WNS": "-647.251",
            "Total Power": "2.33e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "2695617",
            "WNS": "-866.154",
            "Total Power": "3.79e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "566628",
            "WNS": "-282.721",
            "Total Power": "9.57e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "80673",
            "WNS": "-38.555",
            "Total Power": "8.88e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "117757",
            "WNS": "-69.012",
            "Total Power": "1.79e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "370731",
            "WNS": "-200.717",
            "Total Power": "3.92e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "31548",
            "WNS": "-13.801",
            "Total Power": "4.64e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "73390",
            "WNS": "-24.539",
            "Total Power": "8.87e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "522465",
            "WNS": "-350.792",
            "Total Power": "6.33e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "98725",
            "WNS": "-56.745",
            "Total Power": "1.50e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "44180",
            "WNS": "-20.063",
            "Total Power": "5.31e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "45080",
            "WNS": "-15.629",
            "Total Power": "4.83e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "578054",
            "WNS": "-377.820",
            "Total Power": "6.64e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "125082",
            "WNS": "-43.849",
            "Total Power": "1.13e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "277278",
            "WNS": "-123.412",
            "Total Power": "2.75e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "92969",
            "WNS": "-54.099",
            "Total Power": "1.14e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "498144",
            "WNS": "-265.934",
            "Total Power": "1.08e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "2575612",
            "WNS": "-1179.399",
            "Total Power": "5.61e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "195147",
            "WNS": "-107.255",
            "Total Power": "2.33e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "122206",
            "WNS": "-49.478",
            "Total Power": "1.46e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "170166",
            "WNS": "-76.825",
            "Total Power": "1.66e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "574369",
            "WNS": "-184.265",
            "Total Power": "4.18e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "2514677",
            "WNS": "-843.995",
            "Total Power": "3.52e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "70377",
            "WNS": "-29.141",
            "Total Power": "8.72e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "41003",
            "WNS": "-19.937",
            "Total Power": "5.96e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "130369",
            "WNS": "-67.814",
            "Total Power": "1.52e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "135402",
            "WNS": "-67.667",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "75525",
            "WNS": "-32.210",
            "Total Power": "9.75e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "69351",
            "WNS": "-31.390",
            "Total Power": "7.52e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "1891499",
            "WNS": "-902.246",
            "Total Power": "7.36e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "135917",
            "WNS": "-68.234",
            "Total Power": "1.56e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "92836",
            "WNS": "-53.679",
            "Total Power": "1.32e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "50567",
            "WNS": "-25.212",
            "Total Power": "7.46e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "34697",
            "WNS": "-12.268",
            "Total Power": "4.42e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "101129",
            "WNS": "-54.855",
            "Total Power": "1.49e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "31901",
            "WNS": "-12.709",
            "Total Power": "4.02e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "75669",
            "WNS": "-26.073",
            "Total Power": "9.05e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "40300",
            "WNS": "-17.373",
            "Total Power": "4.79e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "53183",
            "WNS": "-24.833",
            "Total Power": "6.58e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "80488",
            "WNS": "-29.141",
            "Total Power": "9.57e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "99130",
            "WNS": "-50.864",
            "Total Power": "1.09e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "135670",
            "WNS": "-79.818",
            "Total Power": "1.54e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "105351",
            "WNS": "-53.542",
            "Total Power": "1.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "38540",
            "WNS": "-18.403",
            "Total Power": "5.64e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "81249",
            "WNS": "-41.254",
            "Total Power": "1.03e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "96784",
            "WNS": "-45.823",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "82847",
            "WNS": "-30.675",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "72646",
            "WNS": "-30.675",
            "Total Power": "9.11e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "62755",
            "WNS": "-31.558",
            "Total Power": "8.10e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "116797",
            "WNS": "-69.012",
            "Total Power": "1.71e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "175580",
            "WNS": "-79.892",
            "Total Power": "1.70e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "137818",
            "WNS": "-72.288",
            "Total Power": "1.59e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "50746",
            "WNS": "-25.212",
            "Total Power": "7.43e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "1381787",
            "WNS": "-636.172",
            "Total Power": "1.64e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "270221",
            "WNS": "-124.758",
            "Total Power": "2.65e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "63790",
            "WNS": "-27.135",
            "Total Power": "6.57e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "75861",
            "WNS": "-30.476",
            "Total Power": "8.46e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "191935",
            "WNS": "-86.377",
            "Total Power": "1.81e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "241253",
            "WNS": "-126.356",
            "Total Power": "2.46e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "982504",
            "WNS": "-378.911",
            "Total Power": "1.00e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "226887",
            "WNS": "-138.676",
            "Total Power": "2.56e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "116809",
            "WNS": "-69.012",
            "Total Power": "1.70e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "225507",
            "WNS": "-146.540",
            "Total Power": "2.72e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "908865",
            "WNS": "-440.435",
            "Total Power": "1.89e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "50746",
            "WNS": "-25.212",
            "Total Power": "7.43e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "329015",
            "WNS": "-161.425",
            "Total Power": "4.23e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "54244",
            "WNS": "-27.639",
            "Total Power": "8.01e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "137305",
            "WNS": "-65.735",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "152332",
            "WNS": "-76.867",
            "Total Power": "1.60e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "202926",
            "WNS": "-55.212",
            "Total Power": "3.00e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "75273",
            "WNS": "-35.488",
            "Total Power": "8.28e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "367890",
            "WNS": "-138.802",
            "Total Power": "4.06e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "227399",
            "WNS": "-124.842",
            "Total Power": "3.33e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "85614",
            "WNS": "-49.079",
            "Total Power": "1.21e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "191265",
            "WNS": "-86.377",
            "Total Power": "1.81e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "1600090",
            "WNS": "-490.964",
            "Total Power": "1.60e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "1438294",
            "WNS": "-409.547",
            "Total Power": "1.87e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "54574",
            "WNS": "-27.639",
            "Total Power": "8.02e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "95881",
            "WNS": "-43.512",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "61173",
            "WNS": "-29.289",
            "Total Power": "7.33e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "109073",
            "WNS": "-44.783",
            "Total Power": "1.02e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "65560",
            "WNS": "-26.073",
            "Total Power": "8.06e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "74523",
            "WNS": "-41.832",
            "Total Power": "9.36e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "171336",
            "WNS": "-106.256",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "68331",
            "WNS": "-38.041",
            "Total Power": "8.21e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "207671",
            "WNS": "-93.095",
            "Total Power": "2.07e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "63456",
            "WNS": "-30.739",
            "Total Power": "7.57e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "260746",
            "WNS": "-143.743",
            "Total Power": "2.77e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "152134",
            "WNS": "-101.378",
            "Total Power": "1.92e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "1628910",
            "WNS": "-739.747",
            "Total Power": "5.92e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "92844",
            "WNS": "-53.679",
            "Total Power": "1.33e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "220193",
            "WNS": "-119.460",
            "Total Power": "3.03e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "63516",
            "WNS": "-30.739",
            "Total Power": "7.55e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "96094",
            "WNS": "-51.956",
            "Total Power": "1.39e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "33928",
            "WNS": "-15.335",
            "Total Power": "4.92e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "102916",
            "WNS": "-46.138",
            "Total Power": "1.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "145018",
            "WNS": "-71.490",
            "Total Power": "1.53e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "238328",
            "WNS": "-111.229",
            "Total Power": "2.30e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "200701",
            "WNS": "-108.138",
            "Total Power": "2.26e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "100898",
            "WNS": "-49.509",
            "Total Power": "1.07e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "722560",
            "WNS": "-358.934",
            "Total Power": "9.95e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "66954",
            "WNS": "-38.807",
            "Total Power": "8.40e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "351381",
            "WNS": "-157.346",
            "Total Power": "3.40e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "108390",
            "WNS": "-64.811",
            "Total Power": "1.35e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "46427",
            "WNS": "-19.937",
            "Total Power": "6.23e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "112159",
            "WNS": "-67.121",
            "Total Power": "1.31e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "147491",
            "WNS": "-88.301",
            "Total Power": "2.14e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "116497",
            "WNS": "-56.535",
            "Total Power": "1.59e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "71514",
            "WNS": "-37.673",
            "Total Power": "1.11e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "62022",
            "WNS": "-32.493",
            "Total Power": "9.16e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "199831",
            "WNS": "-107.696",
            "Total Power": "2.11e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "214150",
            "WNS": "-102.640",
            "Total Power": "2.27e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "31523",
            "WNS": "-13.801",
            "Total Power": "4.53e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "90455",
            "WNS": "-52.145",
            "Total Power": "1.28e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "90677",
            "WNS": "-52.145",
            "Total Power": "1.29e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "85961",
            "WNS": "-49.079",
            "Total Power": "1.23e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "491337",
            "WNS": "-201.472",
            "Total Power": "4.21e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "80661",
            "WNS": "-33.660",
            "Total Power": "8.25e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "2110847",
            "WNS": "-583.796",
            "Total Power": "2.06e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "131163",
            "WNS": "-56.189",
            "Total Power": "1.24e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "159997",
            "WNS": "-70.692",
            "Total Power": "1.55e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "98839",
            "WNS": "-56.745",
            "Total Power": "1.50e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "358224",
            "WNS": "-180.404",
            "Total Power": "4.20e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "85082",
            "WNS": "-32.210",
            "Total Power": "1.09e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "125196",
            "WNS": "-67.184",
            "Total Power": "1.61e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "75692",
            "WNS": "-30.476",
            "Total Power": "8.43e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "104230",
            "WNS": "-44.479",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "80512",
            "WNS": "-29.141",
            "Total Power": "9.62e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "327681",
            "WNS": "-155.832",
            "Total Power": "3.16e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "75494",
            "WNS": "-32.210",
            "Total Power": "9.61e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "157659",
            "WNS": "-93.158",
            "Total Power": "2.53e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "726455",
            "WNS": "-358.934",
            "Total Power": "8.83e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "99562",
            "WNS": "-52.586",
            "Total Power": "1.37e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "102895",
            "WNS": "-55.275",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "126078",
            "WNS": "-76.069",
            "Total Power": "1.45e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "47365",
            "WNS": "-14.600",
            "Total Power": "5.19e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "125895",
            "WNS": "-51.904",
            "Total Power": "1.53e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "117789",
            "WNS": "-69.012",
            "Total Power": "1.79e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "91265",
            "WNS": "-29.782",
            "Total Power": "8.56e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "36337",
            "WNS": "-14.579",
            "Total Power": "4.41e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "72851",
            "WNS": "-30.675",
            "Total Power": "9.12e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "118202",
            "WNS": "-47.052",
            "Total Power": "1.40e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "39469",
            "WNS": "-15.335",
            "Total Power": "5.07e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "91485",
            "WNS": "-49.163",
            "Total Power": "1.34e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "188871",
            "WNS": "-70.272",
            "Total Power": "1.58e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "328152",
            "WNS": "-155.832",
            "Total Power": "3.17e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "92792",
            "WNS": "-53.679",
            "Total Power": "1.32e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "65567",
            "WNS": "-26.073",
            "Total Power": "8.01e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "277612",
            "WNS": "-145.509",
            "Total Power": "2.75e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "1851618",
            "WNS": "-788.598",
            "Total Power": "2.17e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "85756",
            "WNS": "-49.079",
            "Total Power": "1.21e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "240174",
            "WNS": "-127.113",
            "Total Power": "3.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "31230",
            "WNS": "-14.075",
            "Total Power": "4.16e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "56245",
            "WNS": "-27.418",
            "Total Power": "7.04e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "205519",
            "WNS": "-56.745",
            "Total Power": "2.97e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "157852",
            "WNS": "-93.158",
            "Total Power": "2.52e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "1873117",
            "WNS": "-691.569",
            "Total Power": "1.81e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "52827",
            "WNS": "-20.084",
            "Total Power": "6.01e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "587228",
            "WNS": "-300.264",
            "Total Power": "1.11e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "149607",
            "WNS": "-81.962",
            "Total Power": "2.03e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "121100",
            "WNS": "-55.306",
            "Total Power": "1.22e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "75583",
            "WNS": "-42.504",
            "Total Power": "9.48e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "140629",
            "WNS": "-83.444",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "93644",
            "WNS": "-49.583",
            "Total Power": "1.28e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "255469",
            "WNS": "-126.314",
            "Total Power": "2.78e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "157890",
            "WNS": "-93.158",
            "Total Power": "2.52e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "80512",
            "WNS": "-29.141",
            "Total Power": "9.62e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "98733",
            "WNS": "-56.745",
            "Total Power": "1.50e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "53389",
            "WNS": "-28.574",
            "Total Power": "6.90e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "865707",
            "WNS": "-413.408",
            "Total Power": "2.18e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "1844808",
            "WNS": "-788.598",
            "Total Power": "2.34e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "118508",
            "WNS": "-47.052",
            "Total Power": "1.39e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "39074",
            "WNS": "-16.133",
            "Total Power": "4.69e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "29081",
            "WNS": "-12.268",
            "Total Power": "4.26e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "825015",
            "WNS": "-367.496",
            "Total Power": "7.21e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "131068",
            "WNS": "-76.888",
            "Total Power": "1.50e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "36255",
            "WNS": "-16.869",
            "Total Power": "5.28e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "100079",
            "WNS": "-47.713",
            "Total Power": "1.04e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "268726",
            "WNS": "-144.626",
            "Total Power": "2.75e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "850211",
            "WNS": "-323.094",
            "Total Power": "7.71e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "95488",
            "WNS": "-47.377",
            "Total Power": "1.06e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "296178",
            "WNS": "-152.805",
            "Total Power": "3.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "126938",
            "WNS": "-67.394",
            "Total Power": "1.56e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "82864",
            "WNS": "-30.675",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "110996",
            "WNS": "-42.200",
            "Total Power": "1.26e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "87312",
            "WNS": "-27.544",
            "Total Power": "8.39e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "208302",
            "WNS": "-126.188",
            "Total Power": "3.34e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "145476",
            "WNS": "-75.355",
            "Total Power": "1.58e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "40926",
            "WNS": "-19.937",
            "Total Power": "5.99e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "152114",
            "WNS": "-90.729",
            "Total Power": "2.22e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "728821",
            "WNS": "-296.990",
            "Total Power": "7.19e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "157005",
            "WNS": "-83.287",
            "Total Power": "1.89e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "594157",
            "WNS": "-282.805",
            "Total Power": "8.35e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "36235",
            "WNS": "-15.503",
            "Total Power": "4.53e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "33867",
            "WNS": "-13.129",
            "Total Power": "3.94e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "95783",
            "WNS": "-43.512",
            "Total Power": "1.04e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "77312",
            "WNS": "-43.596",
            "Total Power": "9.59e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "41037",
            "WNS": "-19.937",
            "Total Power": "5.97e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "65688",
            "WNS": "-26.073",
            "Total Power": "8.08e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "131753",
            "WNS": "-64.979",
            "Total Power": "1.43e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "3679483",
            "WNS": "-1268.035",
            "Total Power": "5.96e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "669060",
            "WNS": "-298.081",
            "Total Power": "7.56e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "82685",
            "WNS": "-30.675",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "54268",
            "WNS": "-24.014",
            "Total Power": "6.05e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "271932",
            "WNS": "-149.777",
            "Total Power": "3.51e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "143505",
            "WNS": "-75.355",
            "Total Power": "1.68e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "99046",
            "WNS": "-50.213",
            "Total Power": "1.35e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "1450453",
            "WNS": "-722.793",
            "Total Power": "8.13e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "73245",
            "WNS": "-24.539",
            "Total Power": "8.84e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "185224",
            "WNS": "-83.917",
            "Total Power": "1.85e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "295710",
            "WNS": "-152.805",
            "Total Power": "3.05e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "195753",
            "WNS": "-50.612",
            "Total Power": "2.72e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "196712",
            "WNS": "-78.506",
            "Total Power": "2.59e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "1491339",
            "WNS": "-717.589",
            "Total Power": "5.75e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "92969",
            "WNS": "-54.099",
            "Total Power": "1.14e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "78918",
            "WNS": "-36.244",
            "Total Power": "8.76e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "2078610",
            "WNS": "-924.405",
            "Total Power": "4.29e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "130758",
            "WNS": "-54.330",
            "Total Power": "1.66e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "895992",
            "WNS": "-370.433",
            "Total Power": "1.31e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "68363",
            "WNS": "-28.889",
            "Total Power": "7.32e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "208312",
            "WNS": "-79.850",
            "Total Power": "1.81e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "260396",
            "WNS": "-129.383",
            "Total Power": "2.89e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "70770",
            "WNS": "-33.187",
            "Total Power": "7.64e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "461821",
            "WNS": "-286.246",
            "Total Power": "5.07e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "75200",
            "WNS": "-32.210",
            "Total Power": "9.47e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "111016",
            "WNS": "-42.200",
            "Total Power": "1.27e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "1460018",
            "WNS": "-706.845",
            "Total Power": "8.29e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "675850",
            "WNS": "-304.880",
            "Total Power": "9.00e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "54338",
            "WNS": "-27.639",
            "Total Power": "7.89e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "54358",
            "WNS": "-27.639",
            "Total Power": "7.89e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "56204",
            "WNS": "-29.562",
            "Total Power": "7.23e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "214231",
            "WNS": "-82.919",
            "Total Power": "1.87e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "203164",
            "WNS": "-55.212",
            "Total Power": "3.02e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "1009227",
            "WNS": "-467.798",
            "Total Power": "1.33e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "95222",
            "WNS": "-55.212",
            "Total Power": "1.36e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "187649",
            "WNS": "-112.585",
            "Total Power": "2.99e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "131098",
            "WNS": "-67.814",
            "Total Power": "1.67e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "72919",
            "WNS": "-30.675",
            "Total Power": "9.12e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "211903",
            "WNS": "-102.640",
            "Total Power": "2.37e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "56425",
            "WNS": "-27.418",
            "Total Power": "6.99e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "214225",
            "WNS": "-82.919",
            "Total Power": "1.86e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "1251118",
            "WNS": "-419.955",
            "Total Power": "1.81e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "118591",
            "WNS": "-47.052",
            "Total Power": "1.40e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "123835",
            "WNS": "-66.974",
            "Total Power": "1.58e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "1063006",
            "WNS": "-478.877",
            "Total Power": "1.79e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "63374",
            "WNS": "-31.558",
            "Total Power": "7.91e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "63163",
            "WNS": "-24.539",
            "Total Power": "7.57e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "545003",
            "WNS": "-274.496",
            "Total Power": "1.05e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "119974",
            "WNS": "-56.955",
            "Total Power": "1.44e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "234196",
            "WNS": "-121.730",
            "Total Power": "2.79e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "36218",
            "WNS": "-15.503",
            "Total Power": "4.53e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "347921",
            "WNS": "-177.551",
            "Total Power": "4.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "130593",
            "WNS": "-54.330",
            "Total Power": "1.66e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "225270",
            "WNS": "-69.012",
            "Total Power": "3.70e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "901210",
            "WNS": "-373.203",
            "Total Power": "8.20e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "185713",
            "WNS": "-112.585",
            "Total Power": "2.81e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "325391",
            "WNS": "-139.896",
            "Total Power": "3.72e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "824309",
            "WNS": "-367.496",
            "Total Power": "7.21e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "31891",
            "WNS": "-12.709",
            "Total Power": "3.98e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "55643",
            "WNS": "-27.208",
            "Total Power": "7.22e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "64717",
            "WNS": "-31.978",
            "Total Power": "7.91e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "55552",
            "WNS": "-30.024",
            "Total Power": "7.11e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "126878",
            "WNS": "-67.394",
            "Total Power": "1.55e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "420198",
            "WNS": "-205.249",
            "Total Power": "3.91e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {},
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "126078",
            "WNS": "-76.069",
            "Total Power": "1.45e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "139398",
            "WNS": "-85.021",
            "Total Power": "1.61e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "59757",
            "WNS": "-24.896",
            "Total Power": "6.14e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "71294",
            "WNS": "-39.742",
            "Total Power": "8.49e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "78082",
            "WNS": "-27.607",
            "Total Power": "9.39e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "40334",
            "WNS": "-17.373",
            "Total Power": "4.80e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "160531",
            "WNS": "-73.738",
            "Total Power": "1.85e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "61885",
            "WNS": "-32.493",
            "Total Power": "9.28e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "45411",
            "WNS": "-19.244",
            "Total Power": "5.42e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "207668",
            "WNS": "-93.095",
            "Total Power": "2.06e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "275970",
            "WNS": "-119.754",
            "Total Power": "2.68e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "99271",
            "WNS": "-43.901",
            "Total Power": "9.90e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "75528",
            "WNS": "-32.210",
            "Total Power": "9.60e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "155622",
            "WNS": "-84.643",
            "Total Power": "2.04e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "167532",
            "WNS": "-58.005",
            "Total Power": "1.60e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "202797",
            "WNS": "-112.185",
            "Total Power": "3.09e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "94335",
            "WNS": "-44.479",
            "Total Power": "1.15e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "38572",
            "WNS": "-18.403",
            "Total Power": "5.66e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "47924",
            "WNS": "-17.184",
            "Total Power": "5.64e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "171904",
            "WNS": "-103.607",
            "Total Power": "1.97e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "60179",
            "WNS": "-28.049",
            "Total Power": "7.01e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "611804",
            "WNS": "-199.290",
            "Total Power": "5.11e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "170560",
            "WNS": "-80.795",
            "Total Power": "1.82e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "296405",
            "WNS": "-129.341",
            "Total Power": "2.61e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "142644",
            "WNS": "-84.306",
            "Total Power": "1.81e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "108404",
            "WNS": "-53.983",
            "Total Power": "1.16e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "147751",
            "WNS": "-88.301",
            "Total Power": "2.14e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "114416",
            "WNS": "-44.626",
            "Total Power": "1.33e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "420480",
            "WNS": "-137.709",
            "Total Power": "4.08e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "31473",
            "WNS": "-13.801",
            "Total Power": "4.55e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "115907",
            "WNS": "-69.432",
            "Total Power": "1.39e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "114544",
            "WNS": "-44.626",
            "Total Power": "1.34e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "63163",
            "WNS": "-24.539",
            "Total Power": "7.57e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "60397",
            "WNS": "-30.108",
            "Total Power": "8.02e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "213297",
            "WNS": "-116.390",
            "Total Power": "2.99e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "93018",
            "WNS": "-48.343",
            "Total Power": "1.34e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "923644",
            "WNS": "-466.287",
            "Total Power": "1.01e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "199662",
            "WNS": "-90.856",
            "Total Power": "1.87e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "102695",
            "WNS": "-46.138",
            "Total Power": "1.02e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "148346",
            "WNS": "-88.301",
            "Total Power": "2.14e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "188710",
            "WNS": "-100.285",
            "Total Power": "2.03e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "498104",
            "WNS": "-261.989",
            "Total Power": "1.09e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "94347",
            "WNS": "-44.479",
            "Total Power": "1.16e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "86387",
            "WNS": "-43.933",
            "Total Power": "1.04e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "194842",
            "WNS": "-107.255",
            "Total Power": "2.35e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "95222",
            "WNS": "-55.212",
            "Total Power": "1.36e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "117518",
            "WNS": "-69.012",
            "Total Power": "1.77e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "72774",
            "WNS": "-30.675",
            "Total Power": "9.10e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "39459",
            "WNS": "-15.335",
            "Total Power": "5.16e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "97952",
            "WNS": "-49.068",
            "Total Power": "1.04e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "71165",
            "WNS": "-32.819",
            "Total Power": "7.79e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "225127",
            "WNS": "-69.012",
            "Total Power": "3.73e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "32684",
            "WNS": "-12.919",
            "Total Power": "4.08e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "104162",
            "WNS": "-44.479",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "205322",
            "WNS": "-112.942",
            "Total Power": "3.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "38663",
            "WNS": "-16.953",
            "Total Power": "4.75e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "58659",
            "WNS": "-28.868",
            "Total Power": "7.36e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "226885",
            "WNS": "-141.746",
            "Total Power": "2.71e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "247395",
            "WNS": "-152.426",
            "Total Power": "2.83e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "70331",
            "WNS": "-29.141",
            "Total Power": "8.71e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "189088",
            "WNS": "-78.338",
            "Total Power": "1.70e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "44573",
            "WNS": "-22.774",
            "Total Power": "5.79e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "195736",
            "WNS": "-92.212",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "225127",
            "WNS": "-69.012",
            "Total Power": "3.73e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "198384",
            "WNS": "-52.145",
            "Total Power": "2.79e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "473509",
            "WNS": "-340.552",
            "Total Power": "6.22e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "382268",
            "WNS": "-241.929",
            "Total Power": "4.37e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "66785",
            "WNS": "-30.949",
            "Total Power": "7.33e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "238442",
            "WNS": "-105.752",
            "Total Power": "2.85e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "119179",
            "WNS": "-55.306",
            "Total Power": "1.17e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "111921",
            "WNS": "-50.832",
            "Total Power": "1.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "286210",
            "WNS": "-134.177",
            "Total Power": "2.90e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "206267",
            "WNS": "-56.745",
            "Total Power": "3.02e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "40926",
            "WNS": "-19.937",
            "Total Power": "5.99e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "672246",
            "WNS": "-350.373",
            "Total Power": "1.04e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "79850",
            "WNS": "-45.970",
            "Total Power": "9.94e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "77639",
            "WNS": "-35.866",
            "Total Power": "8.48e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "203053",
            "WNS": "-108.138",
            "Total Power": "2.13e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "934697",
            "WNS": "-424.487",
            "Total Power": "1.67e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "603142",
            "WNS": "-411.226",
            "Total Power": "7.35e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "76725",
            "WNS": "-26.662",
            "Total Power": "7.12e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "72774",
            "WNS": "-30.675",
            "Total Power": "9.10e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "420888",
            "WNS": "-137.709",
            "Total Power": "4.08e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "146507",
            "WNS": "-64.181",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "70443",
            "WNS": "-29.141",
            "Total Power": "8.71e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "193632",
            "WNS": "-106.813",
            "Total Power": "2.37e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "62022",
            "WNS": "-32.493",
            "Total Power": "9.16e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "336273",
            "WNS": "-166.807",
            "Total Power": "3.42e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "101799",
            "WNS": "-58.089",
            "Total Power": "1.21e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "117518",
            "WNS": "-69.012",
            "Total Power": "1.77e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "415470",
            "WNS": "-296.570",
            "Total Power": "5.48e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "240712",
            "WNS": "-127.113",
            "Total Power": "3.10e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "104549",
            "WNS": "-55.275",
            "Total Power": "1.34e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "169946",
            "WNS": "-80.795",
            "Total Power": "1.80e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "125786",
            "WNS": "-51.904",
            "Total Power": "1.52e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "66326",
            "WNS": "-29.919",
            "Total Power": "7.76e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "50505",
            "WNS": "-25.212",
            "Total Power": "7.29e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "34099",
            "WNS": "-15.608",
            "Total Power": "4.53e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "111867",
            "WNS": "-50.832",
            "Total Power": "1.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "88361",
            "WNS": "-50.612",
            "Total Power": "1.25e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "44118",
            "WNS": "-20.063",
            "Total Power": "5.24e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "74441",
            "WNS": "-35.425",
            "Total Power": "8.04e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "238633",
            "WNS": "-105.752",
            "Total Power": "2.85e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "47365",
            "WNS": "-14.600",
            "Total Power": "5.20e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "202802",
            "WNS": "-55.212",
            "Total Power": "2.97e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "136703",
            "WNS": "-81.016",
            "Total Power": "1.95e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "232628",
            "WNS": "-101.547",
            "Total Power": "2.25e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "205559",
            "WNS": "-56.745",
            "Total Power": "2.98e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "117501",
            "WNS": "-69.012",
            "Total Power": "1.77e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "152083",
            "WNS": "-90.614",
            "Total Power": "1.83e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "144018",
            "WNS": "-85.873",
            "Total Power": "2.07e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "107294",
            "WNS": "-49.646",
            "Total Power": "1.11e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "152474",
            "WNS": "-73.423",
            "Total Power": "1.50e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "129982",
            "WNS": "-54.330",
            "Total Power": "1.61e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "80467",
            "WNS": "-36.307",
            "Total Power": "8.82e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "108407",
            "WNS": "-64.811",
            "Total Power": "1.35e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "130758",
            "WNS": "-54.330",
            "Total Power": "1.66e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "157396",
            "WNS": "-83.287",
            "Total Power": "1.91e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "90782",
            "WNS": "-43.019",
            "Total Power": "9.70e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "234385",
            "WNS": "-121.730",
            "Total Power": "2.86e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "196990",
            "WNS": "-78.506",
            "Total Power": "2.60e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "397276",
            "WNS": "-203.738",
            "Total Power": "4.01e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "72122",
            "WNS": "-31.831",
            "Total Power": "7.90e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "240983",
            "WNS": "-152.931",
            "Total Power": "2.84e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "65757",
            "WNS": "-26.073",
            "Total Power": "8.08e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "155273",
            "WNS": "-93.557",
            "Total Power": "2.35e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "2436799",
            "WNS": "-1157.240",
            "Total Power": "5.55e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "75241",
            "WNS": "-32.210",
            "Total Power": "9.50e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "174370",
            "WNS": "-83.034",
            "Total Power": "1.85e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "104230",
            "WNS": "-44.479",
            "Total Power": "1.42e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "163318",
            "WNS": "-89.121",
            "Total Power": "2.15e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "50784",
            "WNS": "-25.212",
            "Total Power": "7.44e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "155418",
            "WNS": "-93.158",
            "Total Power": "2.27e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "160813",
            "WNS": "-88.679",
            "Total Power": "2.18e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "183200",
            "WNS": "-75.271",
            "Total Power": "1.73e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "107697",
            "WNS": "-55.695",
            "Total Power": "1.35e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "214412",
            "WNS": "-82.919",
            "Total Power": "1.85e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "185711",
            "WNS": "-112.585",
            "Total Power": "2.82e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "180502",
            "WNS": "-112.395",
            "Total Power": "2.11e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "83142",
            "WNS": "-37.001",
            "Total Power": "8.68e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "364521",
            "WNS": "-199.961",
            "Total Power": "4.30e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "54612",
            "WNS": "-27.639",
            "Total Power": "8.03e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "123648",
            "WNS": "-47.902",
            "Total Power": "1.08e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "64632",
            "WNS": "-31.978",
            "Total Power": "7.89e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "203886",
            "WNS": "-112.185",
            "Total Power": "3.04e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "50746",
            "WNS": "-25.212",
            "Total Power": "7.43e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "225270",
            "WNS": "-69.012",
            "Total Power": "3.70e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "82084",
            "WNS": "-44.479",
            "Total Power": "1.29e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "104428",
            "WNS": "-44.479",
            "Total Power": "1.43e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "99810",
            "WNS": "-47.713",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "147807",
            "WNS": "-88.301",
            "Total Power": "2.15e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "65688",
            "WNS": "-26.073",
            "Total Power": "8.08e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "100922",
            "WNS": "-44.269",
            "Total Power": "1.08e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "65082",
            "WNS": "-30.949",
            "Total Power": "7.58e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "70377",
            "WNS": "-29.141",
            "Total Power": "8.72e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "167737",
            "WNS": "-58.005",
            "Total Power": "1.61e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "71588",
            "WNS": "-41.916",
            "Total Power": "8.92e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "263659",
            "WNS": "-121.688",
            "Total Power": "2.53e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "762523",
            "WNS": "-316.043",
            "Total Power": "1.05e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "140499",
            "WNS": "-68.655",
            "Total Power": "1.53e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "139917",
            "WNS": "-83.444",
            "Total Power": "2.01e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "36170",
            "WNS": "-16.869",
            "Total Power": "5.31e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "205042",
            "WNS": "-110.629",
            "Total Power": "3.00e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "205188",
            "WNS": "-56.745",
            "Total Power": "2.97e-02"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "1006299",
            "WNS": "-467.798",
            "Total Power": "1.33e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "36170",
            "WNS": "-16.869",
            "Total Power": "5.31e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "209257",
            "WNS": "-79.850",
            "Total Power": "1.79e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOAWA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "76432",
            "WNS": "-34.069",
            "Total Power": "8.48e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOAWA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "32742",
            "WNS": "-12.919",
            "Total Power": "4.03e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "470497",
            "WNS": "-306.643",
            "Total Power": "5.59e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "738486",
            "WNS": "-358.934",
            "Total Power": "6.92e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOAANED approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "118283",
            "WNS": "-49.478",
            "Total Power": "1.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOAANED  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "38590",
            "WNS": "-16.953",
            "Total Power": "4.74e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "168877",
            "WNS": "-90.004",
            "Total Power": "2.05e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "643608",
            "WNS": "-212.887",
            "Total Power": "5.05e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "70241",
            "WNS": "-29.141",
            "Total Power": "8.74e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LZTA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "61885",
            "WNS": "-32.493",
            "Total Power": "9.28e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "42858",
            "WNS": "-17.794",
            "Total Power": "5.15e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "134790",
            "WNS": "-79.976",
            "Total Power": "1.54e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following UDM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "75791",
            "WNS": "-26.073",
            "Total Power": "9.10e-03"
        },
        "code": "{.vh}\n`define UDM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 5 employed in this device.",
        "metrics": {
            "Area": "60551",
            "WNS": "-26.693",
            "Total Power": "6.53e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 5                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "64330",
            "WNS": "-30.507",
            "Total Power": "7.20e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "108954",
            "WNS": "-51.053",
            "Total Power": "1.41e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "148504",
            "WNS": "-56.493",
            "Total Power": "1.46e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 32x32 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "948064",
            "WNS": "-365.229",
            "Total Power": "1.40e-01"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 32                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 32                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "207489",
            "WNS": "-93.095",
            "Total Power": "2.06e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "72851",
            "WNS": "-30.675",
            "Total Power": "9.12e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "100611",
            "WNS": "-50.444",
            "Total Power": "1.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "234000",
            "WNS": "-152.006",
            "Total Power": "2.81e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "52998",
            "WNS": "-20.084",
            "Total Power": "6.01e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following APPROX5 approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "106851",
            "WNS": "-42.336",
            "Total Power": "1.00e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define APPROX5  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "66123",
            "WNS": "-34.920",
            "Total Power": "9.91e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "114544",
            "WNS": "-44.626",
            "Total Power": "1.34e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 3 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "92969",
            "WNS": "-54.099",
            "Total Power": "1.14e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 3                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "90804",
            "WNS": "-52.145",
            "Total Power": "1.28e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "70264",
            "WNS": "-29.141",
            "Total Power": "8.76e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "92698",
            "WNS": "-49.373",
            "Total Power": "1.32e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "95861",
            "WNS": "-32.241",
            "Total Power": "9.87e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "169439",
            "WNS": "-84.611",
            "Total Power": "1.81e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "33869",
            "WNS": "-15.335",
            "Total Power": "4.91e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LZTA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 3 employed in this device.",
        "metrics": {
            "Area": "257490",
            "WNS": "-143.302",
            "Total Power": "2.93e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 3                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LZTA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 16x16 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "985364",
            "WNS": "-378.911",
            "Total Power": "9.29e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 16                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 16                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 8x8 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following LOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 16 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "223120",
            "WNS": "-104.826",
            "Total Power": "2.12e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 16                        // Choose Filter weights bitwdith\n`define M 8                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 8                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HOERAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 8 employed in this device.",
        "metrics": {
            "Area": "54338",
            "WNS": "-27.639",
            "Total Power": "7.89e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 8                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HOERAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following HEAA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 6 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "153742",
            "WNS": "-84.201",
            "Total Power": "2.04e-02"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 6                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 8 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "65771",
            "WNS": "-34.920",
            "Total Power": "9.70e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 8                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following LOA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "144377",
            "WNS": "-85.873",
            "Total Power": "2.08e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define LOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "187743",
            "WNS": "-112.585",
            "Total Power": "2.99e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following MHEAA approximate adder. It has the support of the following 8 dataflow as input, and supports input weights 4 bits of integer. With a low precision multiplier coefficient of 12 employed in this device.",
        "metrics": {
            "Area": "50410",
            "WNS": "-25.212",
            "Total Power": "7.41e-03"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 8                        // Choose IFMAP bitwidth \n`define WW 4                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 12                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define MHEAA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 2 employed in this device.",
        "metrics": {
            "Area": "60471",
            "WNS": "-30.108",
            "Total Power": "7.76e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 2                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following DRUM_APTPU approximate multiplier, with the following SETA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 6 employed in this device.",
        "metrics": {
            "Area": "60298",
            "WNS": "-28.049",
            "Total Power": "7.00e-03"
        },
        "code": "{.vh}\n`define DRUM_APTPU //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 6                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following SETA approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 7 bits of integer. With a low precision multiplier coefficient of 10 employed in this device.",
        "metrics": {
            "Area": "152114",
            "WNS": "-90.729",
            "Total Power": "2.22e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 7                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 10                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define SETA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 6x6 systolic array implementation. It contains the following BAM approximate multiplier, with the following HERLOA approximate adder. It has the support of the following 16 dataflow as input, and supports input weights 32 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "187744",
            "WNS": "-112.585",
            "Total Power": "2.98e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 16                        // Choose IFMAP bitwidth \n`define WW 32                        // Choose Filter weights bitwdith\n`define M 6                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 6                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define HERLOA  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    },
    {
        "description": "This is the Verilog Header file that contains the design of 4x4 systolic array implementation. It contains the following BAM approximate multiplier, with the following OLOCA4 approximate adder. It has the support of the following 32 dataflow as input, and supports input weights 5 bits of integer. With a low precision multiplier coefficient of 4 employed in this device.",
        "metrics": {
            "Area": "84209",
            "WNS": "-48.869",
            "Total Power": "1.05e-02"
        },
        "code": "{.vh}\n`define BAM //APMUL                        // Choose the multiplier type \n`define ROUN_WIDTH 1                // Choose rounding width of the IFMap of Weight. Valid in ROBA multiplier \n`define NIBBLE_WIDTH 4              // Choose nibble width. Important for ASM multiplier. Please ==> use only 4 for now \n`define DW 32                        // Choose IFMAP bitwidth \n`define WW 5                        // Choose Filter weights bitwdith\n`define M 4                         // Choose M dimensions of the systolic array = Number of rows = Number of units in each column \n`define N 4                         // Choose N dimensions of the systolic array = Number of columns = Number of units in each row\n`define MULT_DW 4                   // Choose accurate part of approximate multipliers = Valid in DRUM and DRALM\n`define ADDER_PARAM 16               // Choose Adder approximation parameter = Valid for all approximate adders = inaccurate part \n`define VBL 16\n\n`define OLOCA4  //APADDER \n\n\n`ifdef NORMAL_TPU\n    `define ACCURATE_ACCUMULATE\n`endif \n    \n//`define SA_ADDER                    // Choose the accumulator approximation \n\n\n`ifdef MITCHELL\n    `define SHARED_PRE_APPROX\n`elsif ALM_MAA3\n    `define SHARED_PRE_APPROX\n`elsif ALM_SOA\n    `define SHARED_PRE_APPROX\n`elsif ALM_LOA\n    `define SHARED_PRE_APPROX\n`elsif ROBA\n    `define SHARED_PRE_APPROX\n`elsif DRUM_APTPU\n    `define SHARED_PRE_APPROX\n`elsif ALM\n    `define SHARED_PRE_APPROX\n`elsif DRALM\n    `define SHARED_PRE_APPROX\n`elsif ASM\n    `define SHARED_PRE_APPROX\n `endif \n\n\n\n`ifdef ALM_MAA3\n    `define ALM\n`elsif ALM_SOA\n    `define ALM\n`elsif ALM_LOA\n    `define ALM\n `endif     \n"
    }
]